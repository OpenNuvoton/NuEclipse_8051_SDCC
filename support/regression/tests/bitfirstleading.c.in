/* Test find first leading bit operations from stdbit.h

   type: unsigned short, unsigned int, unsigned long, unsigned long long
 */

#include <testfwk.h>

#ifdef __SDCC // Todo: Enable for all C2X implementations
#pragma std_c2x
#include <stdbit.h>
#endif

#include <limits.h>

volatile {type} i;

#define OTHERBYTEBITS(x) (sizeof(x) - 1) * CHAR_BIT

void
testTrailing(void)
{
#ifdef __SDCC // Todo: Enable for all C2X implementations

	i = 0x0;
	ASSERT (stdc_first_leading_one(i) == 0);
	ASSERT (stdc_first_leading_zero(i) == 1);

	i = 0x1;
	ASSERT (stdc_first_leading_one(i) == OTHERBYTEBITS(i) + 8);
	ASSERT (stdc_first_leading_zero(i) == 1);

	i = 0x2;
	ASSERT (stdc_first_leading_one(i) == OTHERBYTEBITS(i) + 7);
	ASSERT (stdc_first_leading_zero(i) == 1);

	i = 0x3;
	ASSERT (stdc_first_leading_one(i) == OTHERBYTEBITS(i) + 7);
	ASSERT (stdc_first_leading_zero(i) == 1);

	i = 0x7;
	ASSERT (stdc_first_leading_one(i) == OTHERBYTEBITS(i) + 6);
	ASSERT (stdc_first_leading_zero(i) == 1);

	i = 0x8;
	ASSERT (stdc_first_leading_one(i) == OTHERBYTEBITS(i) + 5);
	ASSERT (stdc_first_leading_zero(i) == 1);

	i = 0x9;
	ASSERT (stdc_first_leading_one(i) == OTHERBYTEBITS(i) + 5);
	ASSERT (stdc_first_leading_zero(i) == 1);
#endif
}

